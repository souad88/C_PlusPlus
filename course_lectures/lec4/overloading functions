//Overloading function:
//more than one function have the same name but different in :-1-arguments. or  2-return type.
//compiler before runtime knows wich method to be called 
//Overloading : speed excution in the run time, but take time in compile time to distinguish between functions
#include <iostream>
using namespace std;
namespace calc
{
    int add(int a,int b)
    {
         return a+b;
    }
    float add(float c,float d)
    {
            return c+d;
    }

    int sub()
    {   
            int a,b;
            cout<<"enter a"<<endl;
            cin>>a;
            cout<<"enter b"<<endl;
            cin>>b;
        
            return a-b;
    }

    int sub(int d,int h)
    {
        return d-h;
    }
}


int main()
{   float n1=3.3,n2=4.3;
    int add(int,int);
    float add(float,float);
    int res_int=calc::add(1,2); //call function integer arguments
    float res_f=calc::add(n1,n2);//call function float arguments
    calc::sub();
    calc::sub(3,5);
    cout<<"integer adding"<<res_int<<endl;
    cout<<"float adding"<<res_f<<endl;
    
    return 0;
}
